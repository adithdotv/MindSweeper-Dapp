{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wEB3\\\\somnia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { createPublicClient, createWalletClient, custom, formatEther, parseEther } from 'viem';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI, SOMNIA_TESTNET, somniaTestnet } from './contractConfig';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [publicClient, setPublicClient] = useState(null);\n  const [walletClient, setWalletClient] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [gameState, setGameState] = useState({\n    bet: 0,\n    mineCount: 0,\n    diamondsFound: 0,\n    revealedTilesBitmap: 0,\n    active: false,\n    timeLeft: 0\n  });\n  const [betAmount, setBetAmount] = useState('0.01');\n  const [selectedMines, setSelectedMines] = useState(3);\n  const [minimumBet, setMinimumBet] = useState('0');\n  const [gameResult, setGameResult] = useState(null); // 'win', 'lose', or null\n\n  // Connect wallet\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      toast.error('Please install MetaMask!');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      // Add/Switch to Somnia testnet\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: SOMNIA_TESTNET.chainId\n          }]\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [SOMNIA_TESTNET]\n            });\n          } catch (addError) {\n            toast.error('Failed to add Somnia testnet to MetaMask');\n            return;\n          }\n        } else {\n          toast.error('Failed to switch to Somnia testnet');\n          return;\n        }\n      }\n\n      // Create Viem clients\n      const publicClient = createPublicClient({\n        chain: somniaTestnet,\n        transport: custom(window.ethereum)\n      });\n      const walletClient = createWalletClient({\n        chain: somniaTestnet,\n        transport: custom(window.ethereum)\n      });\n      setAccount(accounts[0]);\n      setPublicClient(publicClient);\n      setWalletClient(walletClient);\n\n      // Get minimum bet using public client\n      const minBet = await publicClient.readContract({\n        address: CONTRACT_ADDRESS,\n        abi: CONTRACT_ABI,\n        functionName: 'minimumBet'\n      });\n      setMinimumBet(formatEther(minBet));\n      toast.success('Wallet connected successfully!');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      toast.error('Failed to connect wallet');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load game state\n  const loadGameState = useCallback(async () => {\n    if (!publicClient || !account) return;\n    try {\n      const state = await publicClient.readContract({\n        address: CONTRACT_ADDRESS,\n        abi: CONTRACT_ABI,\n        functionName: 'getGameState',\n        args: [account]\n      });\n      setGameState({\n        bet: formatEther(state[0]),\n        mineCount: Number(state[1]),\n        diamondsFound: Number(state[2]),\n        revealedTilesBitmap: Number(state[3]),\n        active: state[4],\n        timeLeft: Number(state[5])\n      });\n    } catch (error) {\n      console.error('Error loading game state:', error);\n    }\n  }, [publicClient, account]);\n\n  // Start new game\n  const startGame = async () => {\n    if (!walletClient || !account) return;\n    try {\n      setLoading(true);\n      const betInWei = parseEther(betAmount);\n      const hash = await walletClient.writeContract({\n        address: CONTRACT_ADDRESS,\n        abi: CONTRACT_ABI,\n        functionName: 'startGame',\n        args: [selectedMines],\n        value: betInWei,\n        account: account\n      });\n      toast.loading('Starting game...', {\n        id: 'start-game'\n      });\n\n      // Wait for transaction confirmation\n      await publicClient.waitForTransactionReceipt({\n        hash\n      });\n      toast.success('Game started!', {\n        id: 'start-game'\n      });\n      await loadGameState();\n    } catch (error) {\n      console.error('Error starting game:', error);\n      toast.error('Failed to start game');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reveal tile\n  const revealTile = async tileIndex => {\n    if (!walletClient || !gameState.active || !account) return;\n    try {\n      setLoading(true);\n      const hash = await walletClient.writeContract({\n        address: CONTRACT_ADDRESS,\n        abi: CONTRACT_ABI,\n        functionName: 'revealTile',\n        args: [tileIndex],\n        account: account\n      });\n      toast.loading('Revealing tile...', {\n        id: 'reveal-tile'\n      });\n\n      // Wait for transaction confirmation\n      const receipt = await publicClient.waitForTransactionReceipt({\n        hash\n      });\n\n      // Check for TileRevealed event to see if it was a mine\n      const tileRevealedEvent = receipt.logs.find(log => {\n        try {\n          const decoded = publicClient.decodeEventLog({\n            abi: CONTRACT_ABI,\n            data: log.data,\n            topics: log.topics\n          });\n          return decoded.eventName === 'TileRevealed';\n        } catch {\n          return false;\n        }\n      });\n      if (tileRevealedEvent) {\n        const decoded = publicClient.decodeEventLog({\n          abi: CONTRACT_ABI,\n          data: tileRevealedEvent.data,\n          topics: tileRevealedEvent.topics\n        });\n        if (decoded.args.isMine) {\n          // Player hit a mine\n          setGameResult('lose');\n          toast.error('ðŸ’¥ BOOM! You hit a mine! Game over.', {\n            id: 'reveal-tile',\n            duration: 4000\n          });\n        } else {\n          // Player found a diamond\n          toast.success('ðŸ’Ž Diamond found!', {\n            id: 'reveal-tile'\n          });\n        }\n      }\n\n      // Check for GameEnded event\n      const gameEndedEvent = receipt.logs.find(log => {\n        try {\n          const decoded = publicClient.decodeEventLog({\n            abi: CONTRACT_ABI,\n            data: log.data,\n            topics: log.topics\n          });\n          return decoded.eventName === 'GameEnded';\n        } catch {\n          return false;\n        }\n      });\n      if (gameEndedEvent) {\n        const decoded = publicClient.decodeEventLog({\n          abi: CONTRACT_ABI,\n          data: gameEndedEvent.data,\n          topics: gameEndedEvent.topics\n        });\n        if (decoded.args.cashedOut) {\n          setGameResult('win');\n          toast.success(`ðŸŽ‰ You won ${formatEther(decoded.args.reward)} STT!`, {\n            duration: 5000\n          });\n        } else {\n          setGameResult('lose');\n        }\n      }\n      await loadGameState();\n    } catch (error) {\n      console.error('Error revealing tile:', error);\n      toast.error('Failed to reveal tile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cash out\n  const cashOut = async () => {\n    if (!walletClient || !gameState.active || !account) return;\n    try {\n      setLoading(true);\n      const hash = await walletClient.writeContract({\n        address: CONTRACT_ADDRESS,\n        abi: CONTRACT_ABI,\n        functionName: 'cashOut',\n        account: account\n      });\n      toast.loading('Cashing out...', {\n        id: 'cash-out'\n      });\n\n      // Wait for transaction confirmation\n      await publicClient.waitForTransactionReceipt({\n        hash\n      });\n      toast.success('Successfully cashed out!', {\n        id: 'cash-out'\n      });\n      await loadGameState();\n    } catch (error) {\n      console.error('Error cashing out:', error);\n      toast.error('Failed to cash out');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate multiplier based on mines and diamonds found\n  const calculateMultiplier = () => {\n    if (gameState.diamondsFound === 0) return 1;\n    const totalTiles = 25;\n    const safeTiles = totalTiles - gameState.mineCount;\n    let multiplier = 1;\n    for (let i = 0; i < gameState.diamondsFound; i++) {\n      multiplier *= (safeTiles - i) / (totalTiles - i);\n    }\n    return (1 / multiplier).toFixed(2);\n  };\n\n  // Check if tile is revealed\n  const isTileRevealed = index => {\n    return (gameState.revealedTilesBitmap & 1 << index) !== 0;\n  };\n\n  // Load game state on account change\n  useEffect(() => {\n    if (account && publicClient) {\n      loadGameState();\n    }\n  }, [account, publicClient, loadGameState]);\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          setAccount('');\n          setPublicClient(null);\n          setWalletClient(null);\n        } else {\n          setAccount(accounts[0]);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC8E Minesweeper DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Play Minesweeper on Somnia Testnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-section\",\n      children: !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-btn\",\n        onClick: connectWallet,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 24\n        }, this) : 'Connect Wallet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connected:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-address\",\n          children: [account.slice(0, 6), \"...\", account.slice(-4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: !gameState.active ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bet Amount (STT)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.001\",\n            min: minimumBet,\n            value: betAmount,\n            onChange: e => setBetAmount(e.target.value),\n            placeholder: \"Enter bet amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Minimum bet: \", minimumBet, \" STT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Number of Mines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMines,\n            onChange: e => setSelectedMines(Number(e.target.value)),\n            children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: [num, \" mines\"]\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-game-btn\",\n          onClick: startGame,\n          disabled: loading || !betAmount || parseFloat(betAmount) < parseFloat(minimumBet),\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 28\n          }, this) : 'Start Game'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Bet Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [gameState.bet, \" STT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Mines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: gameState.mineCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Diamonds Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: gameState.diamondsFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Multiplier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [calculateMultiplier(), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          children: Array.from({\n            length: 25\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tile ${isTileRevealed(index) ? 'revealed' : ''}`,\n            onClick: () => revealTile(index),\n            disabled: loading || isTileRevealed(index),\n            children: isTileRevealed(index) ? 'ðŸ’Ž' : '?'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cash-out-btn\",\n            onClick: cashOut,\n            disabled: loading || gameState.diamondsFound === 0,\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 30\n            }, this) : `Cash Out (${(parseFloat(gameState.bet) * parseFloat(calculateMultiplier())).toFixed(4)} STT)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7IrQ7jGfRV1lD/KRzXwVI8VnA7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","createPublicClient","createWalletClient","custom","formatEther","parseEther","CONTRACT_ADDRESS","CONTRACT_ABI","SOMNIA_TESTNET","somniaTestnet","toast","Toaster","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","publicClient","setPublicClient","walletClient","setWalletClient","loading","setLoading","gameState","setGameState","bet","mineCount","diamondsFound","revealedTilesBitmap","active","timeLeft","betAmount","setBetAmount","selectedMines","setSelectedMines","minimumBet","setMinimumBet","gameResult","setGameResult","connectWallet","window","ethereum","error","accounts","request","method","params","chainId","switchError","code","addError","chain","transport","minBet","readContract","address","abi","functionName","success","console","loadGameState","state","args","Number","startGame","betInWei","hash","writeContract","value","id","waitForTransactionReceipt","revealTile","tileIndex","receipt","tileRevealedEvent","logs","find","log","decoded","decodeEventLog","data","topics","eventName","isMine","duration","gameEndedEvent","cashedOut","reward","cashOut","calculateMultiplier","totalTiles","safeTiles","multiplier","i","toFixed","isTileRevealed","index","on","length","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","slice","type","step","min","onChange","e","target","placeholder","map","num","parseFloat","Array","from","_","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/wEB3/somnia/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  createPublicClient, \r\n  createWalletClient, \r\n  custom, \r\n  formatEther, \r\n  parseEther\r\n} from 'viem';\r\nimport { CONTRACT_ADDRESS, CONTRACT_ABI, SOMNIA_TESTNET, somniaTestnet } from './contractConfig';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [publicClient, setPublicClient] = useState(null);\r\n  const [walletClient, setWalletClient] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [gameState, setGameState] = useState({\r\n    bet: 0,\r\n    mineCount: 0,\r\n    diamondsFound: 0,\r\n    revealedTilesBitmap: 0,\r\n    active: false,\r\n    timeLeft: 0\r\n  });\r\n  const [betAmount, setBetAmount] = useState('0.01');\r\n  const [selectedMines, setSelectedMines] = useState(3);\r\n  const [minimumBet, setMinimumBet] = useState('0');\r\n  const [gameResult, setGameResult] = useState(null); // 'win', 'lose', or null\r\n\r\n  // Connect wallet\r\n  const connectWallet = async () => {\r\n    if (!window.ethereum) {\r\n      toast.error('Please install MetaMask!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Request account access\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      // Add/Switch to Somnia testnet\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: SOMNIA_TESTNET.chainId }],\r\n        });\r\n      } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [SOMNIA_TESTNET],\r\n            });\r\n          } catch (addError) {\r\n            toast.error('Failed to add Somnia testnet to MetaMask');\r\n            return;\r\n          }\r\n        } else {\r\n          toast.error('Failed to switch to Somnia testnet');\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create Viem clients\r\n      const publicClient = createPublicClient({\r\n        chain: somniaTestnet,\r\n        transport: custom(window.ethereum)\r\n      });\r\n\r\n      const walletClient = createWalletClient({\r\n        chain: somniaTestnet,\r\n        transport: custom(window.ethereum)\r\n      });\r\n\r\n      setAccount(accounts[0]);\r\n      setPublicClient(publicClient);\r\n      setWalletClient(walletClient);\r\n      \r\n      // Get minimum bet using public client\r\n      const minBet = await publicClient.readContract({\r\n        address: CONTRACT_ADDRESS,\r\n        abi: CONTRACT_ABI,\r\n        functionName: 'minimumBet',\r\n      });\r\n      \r\n      setMinimumBet(formatEther(minBet));\r\n      \r\n      toast.success('Wallet connected successfully!');\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      toast.error('Failed to connect wallet');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load game state\r\n  const loadGameState = useCallback(async () => {\r\n    if (!publicClient || !account) return;\r\n\r\n    try {\r\n      const state = await publicClient.readContract({\r\n        address: CONTRACT_ADDRESS,\r\n        abi: CONTRACT_ABI,\r\n        functionName: 'getGameState',\r\n        args: [account],\r\n      });\r\n\r\n      setGameState({\r\n        bet: formatEther(state[0]),\r\n        mineCount: Number(state[1]),\r\n        diamondsFound: Number(state[2]),\r\n        revealedTilesBitmap: Number(state[3]),\r\n        active: state[4],\r\n        timeLeft: Number(state[5])\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading game state:', error);\r\n    }\r\n  }, [publicClient, account]);\r\n\r\n  // Start new game\r\n  const startGame = async () => {\r\n    if (!walletClient || !account) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const betInWei = parseEther(betAmount);\r\n      \r\n      const hash = await walletClient.writeContract({\r\n        address: CONTRACT_ADDRESS,\r\n        abi: CONTRACT_ABI,\r\n        functionName: 'startGame',\r\n        args: [selectedMines],\r\n        value: betInWei,\r\n        account: account,\r\n      });\r\n      \r\n      toast.loading('Starting game...', { id: 'start-game' });\r\n      \r\n      // Wait for transaction confirmation\r\n      await publicClient.waitForTransactionReceipt({ hash });\r\n      \r\n      toast.success('Game started!', { id: 'start-game' });\r\n      \r\n      await loadGameState();\r\n    } catch (error) {\r\n      console.error('Error starting game:', error);\r\n      toast.error('Failed to start game');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Reveal tile\r\n  const revealTile = async (tileIndex) => {\r\n    if (!walletClient || !gameState.active || !account) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const hash = await walletClient.writeContract({\r\n        address: CONTRACT_ADDRESS,\r\n        abi: CONTRACT_ABI,\r\n        functionName: 'revealTile',\r\n        args: [tileIndex],\r\n        account: account,\r\n      });\r\n      \r\n      toast.loading('Revealing tile...', { id: 'reveal-tile' });\r\n      \r\n      // Wait for transaction confirmation\r\n      const receipt = await publicClient.waitForTransactionReceipt({ hash });\r\n      \r\n      // Check for TileRevealed event to see if it was a mine\r\n      const tileRevealedEvent = receipt.logs.find(log => {\r\n        try {\r\n          const decoded = publicClient.decodeEventLog({\r\n            abi: CONTRACT_ABI,\r\n            data: log.data,\r\n            topics: log.topics,\r\n          });\r\n          return decoded.eventName === 'TileRevealed';\r\n        } catch {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      if (tileRevealedEvent) {\r\n        const decoded = publicClient.decodeEventLog({\r\n          abi: CONTRACT_ABI,\r\n          data: tileRevealedEvent.data,\r\n          topics: tileRevealedEvent.topics,\r\n        });\r\n        \r\n        if (decoded.args.isMine) {\r\n          // Player hit a mine\r\n          setGameResult('lose');\r\n          toast.error('ðŸ’¥ BOOM! You hit a mine! Game over.', { \r\n            id: 'reveal-tile',\r\n            duration: 4000 \r\n          });\r\n        } else {\r\n          // Player found a diamond\r\n          toast.success('ðŸ’Ž Diamond found!', { id: 'reveal-tile' });\r\n        }\r\n      }\r\n      \r\n      // Check for GameEnded event\r\n      const gameEndedEvent = receipt.logs.find(log => {\r\n        try {\r\n          const decoded = publicClient.decodeEventLog({\r\n            abi: CONTRACT_ABI,\r\n            data: log.data,\r\n            topics: log.topics,\r\n          });\r\n          return decoded.eventName === 'GameEnded';\r\n        } catch {\r\n          return false;\r\n        }\r\n      });\r\n\r\n      if (gameEndedEvent) {\r\n        const decoded = publicClient.decodeEventLog({\r\n          abi: CONTRACT_ABI,\r\n          data: gameEndedEvent.data,\r\n          topics: gameEndedEvent.topics,\r\n        });\r\n        \r\n        if (decoded.args.cashedOut) {\r\n          setGameResult('win');\r\n          toast.success(`ðŸŽ‰ You won ${formatEther(decoded.args.reward)} STT!`, {\r\n            duration: 5000\r\n          });\r\n        } else {\r\n          setGameResult('lose');\r\n        }\r\n      }\r\n      \r\n      await loadGameState();\r\n    } catch (error) {\r\n      console.error('Error revealing tile:', error);\r\n      toast.error('Failed to reveal tile');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cash out\r\n  const cashOut = async () => {\r\n    if (!walletClient || !gameState.active || !account) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const hash = await walletClient.writeContract({\r\n        address: CONTRACT_ADDRESS,\r\n        abi: CONTRACT_ABI,\r\n        functionName: 'cashOut',\r\n        account: account,\r\n      });\r\n      \r\n      toast.loading('Cashing out...', { id: 'cash-out' });\r\n      \r\n      // Wait for transaction confirmation\r\n      await publicClient.waitForTransactionReceipt({ hash });\r\n      \r\n      toast.success('Successfully cashed out!', { id: 'cash-out' });\r\n      \r\n      await loadGameState();\r\n    } catch (error) {\r\n      console.error('Error cashing out:', error);\r\n      toast.error('Failed to cash out');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Calculate multiplier based on mines and diamonds found\r\n  const calculateMultiplier = () => {\r\n    if (gameState.diamondsFound === 0) return 1;\r\n    const totalTiles = 25;\r\n    const safeTiles = totalTiles - gameState.mineCount;\r\n    let multiplier = 1;\r\n    \r\n    for (let i = 0; i < gameState.diamondsFound; i++) {\r\n      multiplier *= (safeTiles - i) / (totalTiles - i);\r\n    }\r\n    \r\n    return (1 / multiplier).toFixed(2);\r\n  };\r\n\r\n  // Check if tile is revealed\r\n  const isTileRevealed = (index) => {\r\n    return (gameState.revealedTilesBitmap & (1 << index)) !== 0;\r\n  };\r\n\r\n  // Load game state on account change\r\n  useEffect(() => {\r\n    if (account && publicClient) {\r\n      loadGameState();\r\n    }\r\n  }, [account, publicClient, loadGameState]);\r\n\r\n  // Listen for account changes\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length === 0) {\r\n          setAccount('');\r\n          setPublicClient(null);\r\n          setWalletClient(null);\r\n        } else {\r\n          setAccount(accounts[0]);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Toaster position=\"top-right\" />\r\n      \r\n      <div className=\"header\">\r\n        <h1>ðŸ’Ž Minesweeper DApp</h1>\r\n        <p>Play Minesweeper on Somnia Testnet</p>\r\n      </div>\r\n\r\n      <div className=\"wallet-section\">\r\n        {!account ? (\r\n          <button \r\n            className=\"connect-btn\" \r\n            onClick={connectWallet}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <div className=\"loading\"></div> : 'Connect Wallet'}\r\n          </button>\r\n        ) : (\r\n          <div className=\"wallet-info\">\r\n            <p>Connected:</p>\r\n            <div className=\"wallet-address\">\r\n              {account.slice(0, 6)}...{account.slice(-4)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {account && (\r\n        <div className=\"game-container\">\r\n          {!gameState.active ? (\r\n            <div className=\"game-controls\">\r\n              <div className=\"control-group\">\r\n                <label>Bet Amount (STT)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.001\"\r\n                  min={minimumBet}\r\n                  value={betAmount}\r\n                  onChange={(e) => setBetAmount(e.target.value)}\r\n                  placeholder=\"Enter bet amount\"\r\n                />\r\n                <small>Minimum bet: {minimumBet} STT</small>\r\n              </div>\r\n              \r\n              <div className=\"control-group\">\r\n                <label>Number of Mines</label>\r\n                <select \r\n                  value={selectedMines} \r\n                  onChange={(e) => setSelectedMines(Number(e.target.value))}\r\n                >\r\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => (\r\n                    <option key={num} value={num}>{num} mines</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <button \r\n                className=\"start-game-btn\"\r\n                onClick={startGame}\r\n                disabled={loading || !betAmount || parseFloat(betAmount) < parseFloat(minimumBet)}\r\n              >\r\n                {loading ? <div className=\"loading\"></div> : 'Start Game'}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"game-stats\">\r\n                <div className=\"stat-card\">\r\n                  <h4>Bet Amount</h4>\r\n                  <p>{gameState.bet} STT</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Mines</h4>\r\n                  <p>{gameState.mineCount}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Diamonds Found</h4>\r\n                  <p>{gameState.diamondsFound}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Current Multiplier</h4>\r\n                  <p>{calculateMultiplier()}x</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"game-board\">\r\n                {Array.from({ length: 25 }, (_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`tile ${isTileRevealed(index) ? 'revealed' : ''}`}\r\n                    onClick={() => revealTile(index)}\r\n                    disabled={loading || isTileRevealed(index)}\r\n                  >\r\n                    {isTileRevealed(index) ? 'ðŸ’Ž' : '?'}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"game-actions\">\r\n                <button \r\n                  className=\"cash-out-btn\"\r\n                  onClick={cashOut}\r\n                  disabled={loading || gameState.diamondsFound === 0}\r\n                >\r\n                  {loading ? <div className=\"loading\"></div> : `Cash Out (${(parseFloat(gameState.bet) * parseFloat(calculateMultiplier())).toFixed(4)} STT)`}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}