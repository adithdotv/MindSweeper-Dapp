{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wEB3\\\\somnia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI, SOMNIA_TESTNET } from './contractConfig';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [gameState, setGameState] = useState({\n    bet: 0,\n    mineCount: 0,\n    diamondsFound: 0,\n    revealedTilesBitmap: 0,\n    active: false,\n    timeLeft: 0\n  });\n  const [betAmount, setBetAmount] = useState('0.01');\n  const [selectedMines, setSelectedMines] = useState(3);\n  const [minimumBet, setMinimumBet] = useState('0');\n\n  // Connect wallet\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      toast.error('Please install MetaMask!');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      // Add/Switch to Somnia testnet\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: SOMNIA_TESTNET.chainId\n          }]\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [SOMNIA_TESTNET]\n            });\n          } catch (addError) {\n            toast.error('Failed to add Somnia testnet to MetaMask');\n            return;\n          }\n        } else {\n          toast.error('Failed to switch to Somnia testnet');\n          return;\n        }\n      }\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n      setAccount(accounts[0]);\n      setProvider(provider);\n      setContract(contract);\n\n      // Get minimum bet\n      const minBet = await contract.minimumBet();\n      setMinimumBet(ethers.formatEther(minBet));\n      toast.success('Wallet connected successfully!');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      toast.error('Failed to connect wallet');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load game state\n  const loadGameState = useCallback(async () => {\n    if (!contract || !account) return;\n    try {\n      const state = await contract.getGameState(account);\n      setGameState({\n        bet: ethers.formatEther(state[0]),\n        mineCount: Number(state[1]),\n        diamondsFound: Number(state[2]),\n        revealedTilesBitmap: Number(state[3]),\n        active: state[4],\n        timeLeft: Number(state[5])\n      });\n    } catch (error) {\n      console.error('Error loading game state:', error);\n    }\n  }, [contract, account]);\n\n  // Start new game\n  const startGame = async () => {\n    if (!contract) return;\n    try {\n      setLoading(true);\n      const betInWei = ethers.parseEther(betAmount);\n      const tx = await contract.startGame(selectedMines, {\n        value: betInWei\n      });\n      toast.loading('Starting game...', {\n        id: 'start-game'\n      });\n      await tx.wait();\n      toast.success('Game started!', {\n        id: 'start-game'\n      });\n      await loadGameState();\n    } catch (error) {\n      console.error('Error starting game:', error);\n      toast.error('Failed to start game');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reveal tile\n  const revealTile = async tileIndex => {\n    if (!contract || !gameState.active) return;\n    try {\n      setLoading(true);\n      const tx = await contract.revealTile(tileIndex);\n      toast.loading('Revealing tile...', {\n        id: 'reveal-tile'\n      });\n      await tx.wait();\n      await loadGameState();\n      toast.success('Tile revealed!', {\n        id: 'reveal-tile'\n      });\n    } catch (error) {\n      console.error('Error revealing tile:', error);\n      toast.error('Failed to reveal tile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cash out\n  const cashOut = async () => {\n    if (!contract || !gameState.active) return;\n    try {\n      setLoading(true);\n      const tx = await contract.cashOut();\n      toast.loading('Cashing out...', {\n        id: 'cash-out'\n      });\n      await tx.wait();\n      toast.success('Successfully cashed out!', {\n        id: 'cash-out'\n      });\n      await loadGameState();\n    } catch (error) {\n      console.error('Error cashing out:', error);\n      toast.error('Failed to cash out');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate multiplier based on mines and diamonds found\n  const calculateMultiplier = () => {\n    if (gameState.diamondsFound === 0) return 1;\n    const totalTiles = 25;\n    const safeTiles = totalTiles - gameState.mineCount;\n    let multiplier = 1;\n    for (let i = 0; i < gameState.diamondsFound; i++) {\n      multiplier *= (safeTiles - i) / (totalTiles - i);\n    }\n    return (1 / multiplier).toFixed(2);\n  };\n\n  // Check if tile is revealed\n  const isTileRevealed = index => {\n    return (gameState.revealedTilesBitmap & 1 << index) !== 0;\n  };\n\n  // Load game state on account change\n  useEffect(() => {\n    if (account && contract) {\n      loadGameState();\n    }\n  }, [account, contract, loadGameState]);\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          setAccount('');\n          setProvider(null);\n          setContract(null);\n        } else {\n          setAccount(accounts[0]);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC8E Minesweeper DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Play Minesweeper on Somnia Testnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-section\",\n      children: !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-btn\",\n        onClick: connectWallet,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 24\n        }, this) : 'Connect Wallet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connected:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-address\",\n          children: [account.slice(0, 6), \"...\", account.slice(-4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: !gameState.active ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bet Amount (ETH)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.001\",\n            min: minimumBet,\n            value: betAmount,\n            onChange: e => setBetAmount(e.target.value),\n            placeholder: \"Enter bet amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Minimum bet: \", minimumBet, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Number of Mines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMines,\n            onChange: e => setSelectedMines(Number(e.target.value)),\n            children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: [num, \" mines\"]\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-game-btn\",\n          onClick: startGame,\n          disabled: loading || !betAmount || parseFloat(betAmount) < parseFloat(minimumBet),\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 28\n          }, this) : 'Start Game'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Bet Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [gameState.bet, \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Mines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: gameState.mineCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Diamonds Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: gameState.diamondsFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Multiplier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [calculateMultiplier(), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          children: Array.from({\n            length: 25\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tile ${isTileRevealed(index) ? 'revealed' : ''}`,\n            onClick: () => revealTile(index),\n            disabled: loading || isTileRevealed(index),\n            children: isTileRevealed(index) ? '💎' : '?'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cash-out-btn\",\n            onClick: cashOut,\n            disabled: loading || gameState.diamondsFound === 0,\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 30\n            }, this) : `Cash Out (${(parseFloat(gameState.bet) * parseFloat(calculateMultiplier())).toFixed(4)} ETH)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AKyg7rfq9ELi0KJ56UdXAj/GmJY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ethers","CONTRACT_ADDRESS","CONTRACT_ABI","SOMNIA_TESTNET","toast","Toaster","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","provider","setProvider","contract","setContract","loading","setLoading","gameState","setGameState","bet","mineCount","diamondsFound","revealedTilesBitmap","active","timeLeft","betAmount","setBetAmount","selectedMines","setSelectedMines","minimumBet","setMinimumBet","connectWallet","window","ethereum","error","accounts","request","method","params","chainId","switchError","code","addError","BrowserProvider","signer","getSigner","Contract","minBet","formatEther","success","console","loadGameState","state","getGameState","Number","startGame","betInWei","parseEther","tx","value","id","wait","revealTile","tileIndex","cashOut","calculateMultiplier","totalTiles","safeTiles","multiplier","i","toFixed","isTileRevealed","index","on","length","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","slice","type","step","min","onChange","e","target","placeholder","map","num","parseFloat","Array","from","_","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/wEB3/somnia/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { CONTRACT_ADDRESS, CONTRACT_ABI, SOMNIA_TESTNET } from './contractConfig';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [provider, setProvider] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [gameState, setGameState] = useState({\r\n    bet: 0,\r\n    mineCount: 0,\r\n    diamondsFound: 0,\r\n    revealedTilesBitmap: 0,\r\n    active: false,\r\n    timeLeft: 0\r\n  });\r\n  const [betAmount, setBetAmount] = useState('0.01');\r\n  const [selectedMines, setSelectedMines] = useState(3);\r\n  const [minimumBet, setMinimumBet] = useState('0');\r\n\r\n  // Connect wallet\r\n  const connectWallet = async () => {\r\n    if (!window.ethereum) {\r\n      toast.error('Please install MetaMask!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Request account access\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      // Add/Switch to Somnia testnet\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: SOMNIA_TESTNET.chainId }],\r\n        });\r\n      } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [SOMNIA_TESTNET],\r\n            });\r\n          } catch (addError) {\r\n            toast.error('Failed to add Somnia testnet to MetaMask');\r\n            return;\r\n          }\r\n        } else {\r\n          toast.error('Failed to switch to Somnia testnet');\r\n          return;\r\n        }\r\n      }\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\r\n\r\n      setAccount(accounts[0]);\r\n      setProvider(provider);\r\n      setContract(contract);\r\n      \r\n      // Get minimum bet\r\n      const minBet = await contract.minimumBet();\r\n      setMinimumBet(ethers.formatEther(minBet));\r\n      \r\n      toast.success('Wallet connected successfully!');\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      toast.error('Failed to connect wallet');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load game state\r\n  const loadGameState = useCallback(async () => {\r\n    if (!contract || !account) return;\r\n\r\n    try {\r\n      const state = await contract.getGameState(account);\r\n      setGameState({\r\n        bet: ethers.formatEther(state[0]),\r\n        mineCount: Number(state[1]),\r\n        diamondsFound: Number(state[2]),\r\n        revealedTilesBitmap: Number(state[3]),\r\n        active: state[4],\r\n        timeLeft: Number(state[5])\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading game state:', error);\r\n    }\r\n  }, [contract, account]);\r\n\r\n  // Start new game\r\n  const startGame = async () => {\r\n    if (!contract) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const betInWei = ethers.parseEther(betAmount);\r\n      \r\n      const tx = await contract.startGame(selectedMines, {\r\n        value: betInWei\r\n      });\r\n      \r\n      toast.loading('Starting game...', { id: 'start-game' });\r\n      await tx.wait();\r\n      toast.success('Game started!', { id: 'start-game' });\r\n      \r\n      await loadGameState();\r\n    } catch (error) {\r\n      console.error('Error starting game:', error);\r\n      toast.error('Failed to start game');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Reveal tile\r\n  const revealTile = async (tileIndex) => {\r\n    if (!contract || !gameState.active) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const tx = await contract.revealTile(tileIndex);\r\n      \r\n      toast.loading('Revealing tile...', { id: 'reveal-tile' });\r\n      await tx.wait();\r\n      \r\n      await loadGameState();\r\n      toast.success('Tile revealed!', { id: 'reveal-tile' });\r\n    } catch (error) {\r\n      console.error('Error revealing tile:', error);\r\n      toast.error('Failed to reveal tile');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Cash out\r\n  const cashOut = async () => {\r\n    if (!contract || !gameState.active) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const tx = await contract.cashOut();\r\n      \r\n      toast.loading('Cashing out...', { id: 'cash-out' });\r\n      await tx.wait();\r\n      toast.success('Successfully cashed out!', { id: 'cash-out' });\r\n      \r\n      await loadGameState();\r\n    } catch (error) {\r\n      console.error('Error cashing out:', error);\r\n      toast.error('Failed to cash out');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Calculate multiplier based on mines and diamonds found\r\n  const calculateMultiplier = () => {\r\n    if (gameState.diamondsFound === 0) return 1;\r\n    const totalTiles = 25;\r\n    const safeTiles = totalTiles - gameState.mineCount;\r\n    let multiplier = 1;\r\n    \r\n    for (let i = 0; i < gameState.diamondsFound; i++) {\r\n      multiplier *= (safeTiles - i) / (totalTiles - i);\r\n    }\r\n    \r\n    return (1 / multiplier).toFixed(2);\r\n  };\r\n\r\n  // Check if tile is revealed\r\n  const isTileRevealed = (index) => {\r\n    return (gameState.revealedTilesBitmap & (1 << index)) !== 0;\r\n  };\r\n\r\n  // Load game state on account change\r\n  useEffect(() => {\r\n    if (account && contract) {\r\n      loadGameState();\r\n    }\r\n  }, [account, contract, loadGameState]);\r\n\r\n  // Listen for account changes\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length === 0) {\r\n          setAccount('');\r\n          setProvider(null);\r\n          setContract(null);\r\n        } else {\r\n          setAccount(accounts[0]);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Toaster position=\"top-right\" />\r\n      \r\n      <div className=\"header\">\r\n        <h1>💎 Minesweeper DApp</h1>\r\n        <p>Play Minesweeper on Somnia Testnet</p>\r\n      </div>\r\n\r\n      <div className=\"wallet-section\">\r\n        {!account ? (\r\n          <button \r\n            className=\"connect-btn\" \r\n            onClick={connectWallet}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <div className=\"loading\"></div> : 'Connect Wallet'}\r\n          </button>\r\n        ) : (\r\n          <div className=\"wallet-info\">\r\n            <p>Connected:</p>\r\n            <div className=\"wallet-address\">\r\n              {account.slice(0, 6)}...{account.slice(-4)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {account && (\r\n        <div className=\"game-container\">\r\n          {!gameState.active ? (\r\n            <div className=\"game-controls\">\r\n              <div className=\"control-group\">\r\n                <label>Bet Amount (ETH)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.001\"\r\n                  min={minimumBet}\r\n                  value={betAmount}\r\n                  onChange={(e) => setBetAmount(e.target.value)}\r\n                  placeholder=\"Enter bet amount\"\r\n                />\r\n                <small>Minimum bet: {minimumBet} ETH</small>\r\n              </div>\r\n              \r\n              <div className=\"control-group\">\r\n                <label>Number of Mines</label>\r\n                <select \r\n                  value={selectedMines} \r\n                  onChange={(e) => setSelectedMines(Number(e.target.value))}\r\n                >\r\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => (\r\n                    <option key={num} value={num}>{num} mines</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <button \r\n                className=\"start-game-btn\"\r\n                onClick={startGame}\r\n                disabled={loading || !betAmount || parseFloat(betAmount) < parseFloat(minimumBet)}\r\n              >\r\n                {loading ? <div className=\"loading\"></div> : 'Start Game'}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"game-stats\">\r\n                <div className=\"stat-card\">\r\n                  <h4>Bet Amount</h4>\r\n                  <p>{gameState.bet} ETH</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Mines</h4>\r\n                  <p>{gameState.mineCount}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Diamonds Found</h4>\r\n                  <p>{gameState.diamondsFound}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <h4>Current Multiplier</h4>\r\n                  <p>{calculateMultiplier()}x</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"game-board\">\r\n                {Array.from({ length: 25 }, (_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`tile ${isTileRevealed(index) ? 'revealed' : ''}`}\r\n                    onClick={() => revealTile(index)}\r\n                    disabled={loading || isTileRevealed(index)}\r\n                  >\r\n                    {isTileRevealed(index) ? '💎' : '?'}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"game-actions\">\r\n                <button \r\n                  className=\"cash-out-btn\"\r\n                  onClick={cashOut}\r\n                  disabled={loading || gameState.diamondsFound === 0}\r\n                >\r\n                  {loading ? <div className=\"loading\"></div> : `Cash Out (${(parseFloat(gameState.bet) * parseFloat(calculateMultiplier())).toFixed(4)} ETH)`}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}